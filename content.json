{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/10/18/hello-world/"},{"title":"抽象代数笔记","text":"我不信，别开这种玩笑？ 我不信，别开这种玩笑 A = \\begin{bmatrix} a_{11} & a_{12} & ... & a_{1n}\\\\ a_{21} & a_{22} & ... & a_{2n}\\\\ a_{31} & a_{22} & ... & a_{3n}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ a_{n1} & a_{n2} & ... & a_{nn}\\\\ \\end{bmatrix} , b = \\begin{bmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\\\ \\vdots \\\\ b_{n} \\\\ \\end{bmatrix}6.1 代数结构代数系统（代数）：非空集合 和 上的 个一元或二元运算 组成的系统。记作 。 6.1.1 代数运算设 是非空集合， 是从 到 的一个映射，则称 为集合 到 的一个 元代数运算。（其中 称作该运算的阶）。 等这些符号加上 普通 的前缀，才代表的是其原来的运算。 运算的封闭性设 为集合 到 的一个 元运算。若 ,则称 在集合 上是封闭的。e.g. 普通减运算在 上不封闭。 若称一个运算是某个集合上的运算，则该运算必须满足在这个集合上具有封闭性。 1. 运算性质 - 交换律设 为 上的二元运算，若 都有： x * y = y * x则称运算 $在S$ 上可交换。若已知该运算的运算表，则可通过判断*该表是否满足沿主对角线对称，来判断是否满足交换律。 2. 运算性质 - 结合律设 为 上的二元运算，若 都有: (x * y) * z = x * (y * z)则称运算 在 上可结合。判断该运算是否满足结合律，不能通过运算表直观的看出来。 3. 运算性质 - 分配律设 为 上的二元运算，若 都有： x * (y \\circ z) = (x * y) \\circ (x * z), \\quad 称 * 对 \\circ 左可分配 \\\\ (y \\circ z) * x = (y * x) \\circ (z * x), \\quad 称 \\circ 对 * 右可分配则称 对 可分配。 4. 运算性质 - 吸收律设 为 上的二元运算，若 都有： x * (x \\circ y) = x, \\quad 称 * 对 \\circ 左可吸收 \\\\ (x \\circ y) * x = x, \\quad 称 \\circ 对 * 右可吸收则称 $对\\circ可吸收。若满足交换律，则只需证明一边满足吸收律即可。集合中的\\bigcup运算对\\bigcap运算可吸收。因为A \\bigcup (A \\bigcap B) = A$（右可吸收同理）。 5. 运算性质 - 等幂律设 为 上的二元运算，若 都有: x * x = x则称运算 在 上满足等幂律。 6. 运算性质 - 消去律设 为 上的二元运算，某个元素 ，若 都有： a * x = a * y \\ \\Rightarrow x = y, \\quad 称a是左可消去的 \\\\ x * a = y * a \\ \\Rightarrow x = y, \\quad 称a是右可消去的则称 关于 运算 $是可消去的。若S中所有的元素都满足消去律，则可说明$ 满足消去律。 $a x = a y \\Rightarrow x = y$ 叫做永真蕴含式。箭头左边的式子叫做前件，右边的叫做后件。永真蕴含式表明，若前件成立，则后件一定成立。永真蕴含式的逆否形式也成立。 可消去性可以从运算表中观察到。若 满足消去律，则运算表中每一行每一列中都没有相同的元素。 6.1.2 代数常元该代数系统中与运算相关的特殊元素称作代数常元。 1. 幺元设 是定义在 上的二元运算，若存在元素 (或 ) 使得 都有： e_l * x = x \\quad （或 \\ x * e_r = x）则称 (或 ) 是 中关于 $运算的左（右）幺元。若e既是左幺元又是右幺元，则称e是S中关于运算的幺元。且e是S上关于*$ 的唯一的幺元。 2. 零元设 是定义在 上的二元运算，若存在元素 (或 ) 使得 都有： \\theta_l * x = \\theta_l \\quad （或 \\ x * \\theta_r = \\theta_r）则称 (或 ) 是 中关于 $运算的左（右）零元。若\\theta既是左零元又是右零元，则称\\theta是S中关于运算的零元。且\\theta是S上关于*$ 的唯一的零元。 3. 逆元设 $是定义在S上的二元运算，e是S中关于运算的幺元。对于x \\in S如果存在y_l \\in S（或y_r \\in S$）使得： y_l * x = e \\quad （或 \\ x * y_r = e）则称 (或 ) 是 的左（右）逆元。若 既是左逆元又是右逆元，则称 是 的逆元。 若 $$ 运算是*可结合的，且对于 存在 ，则 是 的唯一的逆元, 。 6.2 子代数6.2.1 子代数的定义设 $\\langle A, , \\varDelta, k \\rangle是一个代数系统，, \\varDelta分别是载体A上的二元运算和一元运算，k$ 是代数常元。若： A' \\subseteq A \\\\ A' 对 * 和 \\varDelta 均封闭 \\\\ k \\subseteq A'则称 $\\langle A, , \\varDelta, k \\rangle是A的子代数系统。若A’ = A，\\langle A’, , \\varDelta, k \\rangle被称为A的最大的子代数。若A’ = k，\\langle A’, , \\varDelta, k \\rangle被称为A的最小的子代数。最大和最小子代数被称为A$ 的平凡子代数。其余的子代数（）被称为 的*真子代数。 6.3 同态6.3.1 同态的定义设 $A = \\langle S, , \\varDelta, k \\rangle, A’ = \\langle S’, ‘, \\varDelta’, k’ \\rangle两个具有相同构成的代数系统，f是从S到S’$ 的一个映射， 且对 满足（先运算再映射 = 先映射再运算）： f(a*b) = f(a) *'f(b) \\\\ f(\\varDelta a) = \\varDelta'f(a) \\\\ f(k) = k'则称 为由 到 的一个同态映射， 简称同态， 记作 。 6.3.2 同态象设 是从 到 的同态映射，称 $\\langle f(S), ‘, \\varDelta’, k’ \\rangle为A在映射f$ 下的*同态象。 6.3.3 同态的分类设 是从 到 的一个映射。 满射：若 中每个值都能在 中找到其原象，则称 是一个满射。 单射：若 ，都有 。则称 是一个单射。 双射：既是满射又是双射的映射。 设 是从 $A = \\langle S, , \\varDelta, k \\rangle到A’ = \\langle S’, ‘, \\varDelta’, k’ \\rangle$ 的一个同态映射。 若 是满射的，则称 是一个满同态。 若 是单射的，则称 是一个单一同态。 若 是双射的，则称 是一个同构映射，简称同构，记作 。 若 ，则称 为 上的自同态。 若 且 是双射的，则称 为 上的自同构。 6.3.4 同态的性质设 是从 $A = \\langle S, , \\varDelta, k \\rangle到A’ = \\langle S’, ‘, \\varDelta’, k’ \\rangle的一个同态映射。那么A的同态象A’’ = \\langle f(S), *’, \\varDelta’, k‘ \\rangle$。 是 的子代数。 若 $在A中可交换（可结合），则‘在A’’$ 中也可交换（可结合）。 若在 中 $对\\varDelta可分配，则在A’’中‘对\\varDelta’$ 也可分配。 若 是 中关于运算 $的幺元，则f(e)也是A’’中关于运算‘$ 的幺元。 若 是 中关于运算 $的零元，则f(\\theta)也是A’’中关于运算‘$ 的零元。 , 对运算 $存在逆元x^{-1}；则在f(S)中，f(x)也有关于运算‘的逆元f(x^{-1})$。 6.4 同余6.4.1 同余的定义设代数系统 ， 是载体 上的等价关系。 ： 当 时，若 ，则说明等价关系在一元运算 下是可保持的，称 是关于运算 的同余关系。 当 时，若 $a c \\sim b d，则说明等价关系在二元运算下是可保持的，称\\sim是关于运算$ 的同余关系。 若 在 上的所有运算下都是可保持的，则称 是代数系统 上的同余关系。 等价关系具有对称性、自反性、传递性。 6.4.2 与同态有关的定理设 是从 $A = \\langle S, , \\varDelta, k \\rangle到A’ = \\langle S’, ‘, \\varDelta’, k’ \\rangle的一个同态映射。若在A上定义等价关系R$ ： \\langle a, b \\rangle \\in R, \\quad iff: g(a) = g(b)则 是 上的一个同余关系。 6.5 商代数6.5.1 商代数的定义与性质设代数系统 $A = \\langle S, , \\varDelta, k \\rangle，\\sim是A上的同余关系。则称A关于\\sim的商代数A/ ! \\sim = \\langle S/ ! \\sim, ‘, \\varDelta’, [k] \\rangle。其中 \\varDelta’[a] = [\\varDelta a], [a] ‘ [b] = [ab]$。 是集合的集合，即等价类的集合。该集合是 的一个划分，即该集合中任意两元素（集合）的交集是空集（因为等价具有传递性）。 是集合间的运算， 是代数常元的集合。 小结：由等价关系 可以得到代数系统 的载体的一个划分，以这个划分为新的载体，按照原运算的规则建立等价类之间新的运算，这样得到的代数系统是原代数系统的商代数。 6.6 半群与独异点6.6.1 半群与子半群半群：对于一个代数系统 $\\langle S, \\rangle，是S上的二元运算，若运算$ 是可结合的，则称 $\\langle S, \\rangle为半群。子半群：设\\langle S, \\rangle是一个半群，T \\subseteq S且在T上是封闭的，那么\\langle T, \\rangle是\\langle S, \\rangle的子代数。\\langle T, \\rangle也是一个半群，称为\\langle S, \\rangle$ 的子半群（因为结合律在子代数上可继承）。 6.6.2 独异点与子独异点独异点：含有幺元的半群（含幺半群）。子独异点：满足是原代数系统的子代数，本身是独异点，且在相同运算下与原代数系统有相同幺元，那么称为是原独异点的子独异点。 6.6.3 半群与独异点的等幂元性质设 $\\langle S, \\rangle是一个半群，若S是一个有限集，则必存在a \\in S，使得a a = a$。证明：结合鸽巢原理。 6.6.4 交换半群与循环独异点交换半群（独异点）：在半群（独异点）中，若运算是可交换的，则称此半群（独异点）为交换半群（独异点）。 循环独异点：设 $\\langle S, , e \\rangle是一个独异点，若\\exist g \\in S，则 \\forall a \\in S , \\exist k \\in \\mathbb N使得a = g ^ k（g ^ k是k个g做运算的意思），则称此独异点为循环独异点。（存在一个数能把其他所有数都表示出来）g$ 称为该循环独异点的*生成元，一个循环独异点的生成元个数可以不唯一。 6.7 群6.7.1 群的定义群：设 $\\langle G, \\rangle是一个代数系统。若运算是可结合的（是半群），并且存在幺元（是独异点），并且\\forall x \\in G，都存在其唯一的逆元x ^ {-1} \\in G，则称\\langle G, * \\rangle$ 是一个群。 群的阶数：群的元素个数，记作 。根据 可以将群分为有限群和无限群。 6.7.2 群的性质 群中无零元。 （因为零元不可逆，故群中一定不含零元。） 群中每个元素的逆元唯一。 设 $\\langle G, \\rangle是一个群，对于a, b \\in G，必存在唯一的x \\in G，使得a x = b$。 （即群中任何两个元素都能通过运算相互表示。） 设 $\\langle G, \\rangle是一个群，\\forall a, b, c \\in G，若有a b = a c或者b a = c * a，则必有b = c$（消去律）。 （因为没有零元，所以可以直接消去。） 设 是一个群，除幺元 外，不可能有任何别的等幂元。 群 的运算表的每一行/每一列都是 中所有元素的一个置换。 （ 中每一个元素都会在运算表中的每一行/每一列出现，并且只出现一次。）","link":"/2023/10/18/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0%E7%AC%94%E8%AE%B0/"},{"title":"latex test","text":"\\sum_{i = 1}^{n} a_i = S_n","link":"/2023/10/19/latex-test/"}],"tags":[],"categories":[],"pages":[]}